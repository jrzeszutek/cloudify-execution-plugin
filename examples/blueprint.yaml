tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/4.3/types.yaml
  - plugin:cloudify-execution-plugin?version=0.4

inputs:

  ansible_host:
    type: string

  username:
    type: string
    default: ubuntu

  resource_list:
    # For Ansible.
    default:
      - exec
      - helloworld.yml
      - hosts.tmp
      - id_rsa

node_templates:

  application:
    type: cloudify.nodes.Execution
    properties:
      resource_config:
        resource_dir: resources/ansible
        resource_list: { get_input: resource_list }
        template_variables:
          ansible_host: { get_input: ansible_host }
          ansible_user: { get_input: username }
          ansible_ssh_private_key_file: id_rsa
    # interfaces:
    #   cloudify.interfaces.lifecycle:
    #     create:
    #       inputs:
    #         resource_config: { get_property: [ SELF, resource_config ] }
    #         file_to_source: exec
    # relationships:
    # - type: cloudify.relationships.contained_in
    #   target: host
    # For HELM.
    # interfaces:
    #   cloudify.interfaces.lifecycle:
    #     create:
    #       implementation: exec.exec_plugin.tasks.execute
    #       inputs:
    #         resource_config: { get_property: [ SELF, resource_config ] }
    #         subprocess_args_overrides: {'env': {'SCRIPT_NAME': 'install.sh'}}
    #     delete:
    #       implementation: exec.exec_plugin.tasks.execute
    #       inputs:
    #         resource_config: { get_property: [ SELF, resource_config ] }
    #         subprocess_args_overrides: {'env': {'SCRIPT_NAME': 'uninstall.sh'}}

  # host:
  #   type: cloudify.nodes.Compute
  #   properties:
  #     ip: { get_input: host_ip }
  #     agent_config:
  #       install_method: remote
  #       port: 22
  #       user: { get_input: username }
  #       key: { get_secret: agent_key_private }
